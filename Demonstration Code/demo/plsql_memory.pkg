CREATE OR REPLACE PACKAGE plsql_memory
/*
Overview: Calculate and show UGA and PGA memory consumption
          by the current session.

Author: John Beresniewicz and Steven Feuerstein

Dependencies:

    SELECT privileges required on:
       v$sesstat
       v$statname
       v$session

    Here are the statements you should run:

    GRANT SELECT ON v$sesstat TO schema;
    GRANT SELECT ON v$statname TO schema;
    GRANT SELECT ON v$SESSION TO schema;

Example of use:

CREATE OR REPLACE PACKAGE plsql_memory_globals
IS
   TYPE strings_aat
   IS
      TABLE OF varchar2 (10000)
         INDEX BY pls_integer;

   g_list_of_strings   strings_aat;
END plsql_memory_globals;
/

DECLARE
   l_strings   plsql_memory_globals.strings_aat;

   PROCEDURE run_my_application
   IS
   BEGIN
      FOR i IN 1 .. 10000
      LOOP
         FOR j IN 1 .. 10
         LOOP
            l_strings (i + j * 100000 - 1) := TO_CHAR (i);

            plsql_memory_globals.g_list_of_strings (i + j * 100000 - 1) := TO_CHAR (i);
         END LOOP;
      END LOOP;
   END run_my_application;
BEGIN
   plsql_memory.start_analysis;
   run_my_application;
   plsql_memory.show_memory_usage;
   
   plsql_memory_globals.g_list_of_strings.delete;
END plsql_memory_demo;
/  

*** End example
  
*/
IS
   PROCEDURE reset_analysis;

   PROCEDURE start_analysis;

   PROCEDURE show_memory_usage (pga_only_in IN BOOLEAN DEFAULT FALSE);
END plsql_memory;
/

CREATE OR REPLACE PACKAGE BODY plsql_memory
IS
   g_uga_start   PLS_INTEGER;
   g_pga_start   PLS_INTEGER;

   FUNCTION statval (statname_in IN VARCHAR2)
      RETURN NUMBER
   IS
      l_memory   PLS_INTEGER;
   BEGIN
      SELECT s.VALUE
        INTO l_memory
        FROM v$sesstat s
           , v$statname n
           , (SELECT *
                FROM v$session
               WHERE audsid = USERENV ('SESSIONID')) my_session
       WHERE     s.statistic# = n.statistic#
             AND s.sid = my_session.sid
             AND n.name = statname_in;

      RETURN l_memory;
   END statval;

   PROCEDURE reset_analysis
   IS
   BEGIN
      g_uga_start := NULL;
      g_pga_start := NULL;
   END reset_analysis;

   PROCEDURE get_memory_data (uga_out   OUT PLS_INTEGER
                            , pga_out   OUT PLS_INTEGER)
   IS
   BEGIN
      uga_out := statval ('session uga memory');
      pga_out := statval ('session pga memory');
   END get_memory_data;

   PROCEDURE start_analysis
   IS
   BEGIN
      get_memory_data (g_uga_start, g_pga_start);
   END start_analysis;

   PROCEDURE show_memory_usage (pga_only_in IN BOOLEAN DEFAULT FALSE)
   IS
      l_uga_usage   PLS_INTEGER;
      l_pga_usage   PLS_INTEGER;

      PROCEDURE show_one (type_in    IN VARCHAR2
                        , usage_in   IN INTEGER
                        , start_in   IN INTEGER)
      IS
      BEGIN
         IF g_uga_start IS NULL
         THEN
            DBMS_OUTPUT.put_line (
               '   ' || type_in || ' memory: ' || usage_in);
         ELSE
            DBMS_OUTPUT.put_line (
                  '   Change in '
               || type_in
               || ' memory: '
               || TO_CHAR (usage_in - start_in)
               || ' (Current = '
               || TO_CHAR (usage_in)
               || ')');
         END IF;
      END show_one;
   BEGIN
      get_memory_data (l_uga_usage, l_pga_usage);

      IF NOT pga_only_in
      THEN
         show_one ('UGA', l_uga_usage, g_uga_start);
      END IF;

      show_one ('PGA', l_pga_usage, g_pga_start);
   END show_memory_usage;
END plsql_memory;
/