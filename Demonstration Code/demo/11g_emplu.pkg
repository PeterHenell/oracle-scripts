/*
    The query hidden inside a package body....not cached.
*/

CREATE OR REPLACE PACKAGE emplu1
IS
   FUNCTION onerow (
      employee_id_in   IN employees.employee_id%TYPE)
      RETURN employees%ROWTYPE;
END;
/

CREATE OR REPLACE PACKAGE BODY emplu1
IS
   FUNCTION onerow (
      employee_id_in   IN employees.employee_id%TYPE)
      RETURN employees%ROWTYPE
   IS
      onerow_rec   employees%ROWTYPE;
   BEGIN
      SELECT *
        INTO onerow_rec
        FROM employees
       WHERE employee_id = employee_id_in;

      RETURN onerow_rec;
   END;
END;
/

/*
    The PGA cache technique
*/

CREATE OR REPLACE PACKAGE emplu2
IS
   FUNCTION onerow (
      employee_id_in   IN employees.employee_id%TYPE)
      RETURN employees%ROWTYPE;
END;
/

CREATE OR REPLACE PACKAGE BODY emplu2
IS
   TYPE employee_tt IS TABLE OF employees%ROWTYPE
      INDEX BY PLS_INTEGER;

   employee_cache   employee_tt;

   FUNCTION onerow (
      employee_id_in   IN employees.employee_id%TYPE)
      RETURN employees%ROWTYPE
   IS
   BEGIN
      RETURN employee_cache (employee_id_in);
   END onerow;

   PROCEDURE load_cache
   IS
   BEGIN
      FOR rec IN (SELECT * FROM employees)
      LOOP
         employee_cache (rec.employee_id) := rec;
      END LOOP;
   END load_cache;
BEGIN
   load_cache;
END emplu2;
/

/*
    Adding a result cache to the function header....
    
    SO EASY! :-) 
*/

CREATE OR REPLACE PACKAGE emplu11g
IS
   FUNCTION onerow (
      employee_id_in   IN employees.employee_id%TYPE)
      RETURN employees%ROWTYPE
      RESULT_CACHE;
END;
/

/*
This result cache depends on the employees table, so...
Whenever any session commits data to this table, all
result caches so depended are invalidated. The next
time data is requested, the function body will be
executed, just like the first time.
*/

CREATE OR REPLACE PACKAGE BODY emplu11g
IS
   FUNCTION onerow (
      employee_id_in   IN employees.employee_id%TYPE)
      RETURN employees%ROWTYPE
      RESULT_CACHE  
   $IF DBMS_DB_VERSION.VERSION = 11 AND
       DBMS_DB_VERSION.RELEASE = 1
   $THEN
      /* Deprecated in 11.2 */
      RELIES_ON (employees)
   $END
   IS
      onerow_rec   employees%ROWTYPE;
   BEGIN
      SELECT *
        INTO onerow_rec
        FROM employees
       WHERE employee_id = employee_id_in;

      RETURN onerow_rec;
   END;
END;
/