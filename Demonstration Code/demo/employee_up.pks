
CREATE OR REPLACE PACKAGE EMPLOYEE_up
/*
| GENERATED BY Qnxo - DO NOT MODIFY!
|
| Qnxo - "Get it right, do it fast"
| www.qnxo.com
| Copyright, PL/Solutions, 2003-2004
| All rights reserved
|
| Created On: June      28, 2004 08:36:54
| Created By: SCOTT
*/
IS
   -- Converts a row to a string that can be displayed.
   -- Currently only supports number, date and strings columns
   -- (anything that can be converted using STANDARD.TO_CHAR).
   FUNCTION to_char (
      EMPLOYEE_ID_in IN EMPLOYEE_tp.EMPLOYEE_ID_t,
      delimiter_in IN VARCHAR2 := CHR(10) -- Carriage return
      )
   RETURN VARCHAR2;

   -- Converts a record to a string that can be displayed.
   -- Currently only supports number, date and strings columns
   -- (anything that can be converted using STANDARD.TO_CHAR).
   FUNCTION to_char (
        rec_in IN EMPLOYEE_tp.EMPLOYEE_rt
      , delimiter_in IN VARCHAR2 := CHR(10) -- Carriage return
      )
   RETURN VARCHAR2;

   -- Displays a row of information as returned by the
   -- EMPLOYEE_up.to_char function.
   PROCEDURE display_row (
      EMPLOYEE_ID_in IN EMPLOYEE_tp.EMPLOYEE_ID_t,
      delimiter_in IN VARCHAR2 := CHR(10) -- Carriage return
      );

   -- Displays a record of information as returned by the
   -- EMPLOYEE_up.to_char function.
   PROCEDURE display_row (
        rec_in IN EMPLOYEE_tp.EMPLOYEE_rt
      , delimiter_in IN VARCHAR2 := CHR(10) -- Carriage return
      );

   -- Write the specified rows of the table to a file.
   -- This program uses UTL_FILE; you are responsible for making
   -- sure UTL_FILE is enabled for the specified directory.
   PROCEDURE dump_to_file (
      loc_in IN VARCHAR2
    , file_in IN VARCHAR2
    , where_in IN VARCHAR2 := NULL
    , delimiter_in IN VARCHAR2 := '|'
    );

   -- Copy the specified row to another row in the table,
   -- using the new values specified by the NV parameters
   -- below. NULL values will be ignored. If you specify
   -- prefix and/or suffix values then those strings are
   -- applied to all VARCHAR2 columns in the table.
   PROCEDURE copy (
      -- Primary key to identify source row
      EMPLOYEE_ID_in IN EMPLOYEE_tp.EMPLOYEE_ID_t,
      -- New value parameters, overriding existing ones.
      LAST_NAME_nv IN EMPLOYEE_tp.LAST_NAME_t DEFAULT NULL,
      FIRST_NAME_nv IN EMPLOYEE_tp.FIRST_NAME_t DEFAULT NULL,
      MIDDLE_INITIAL_nv IN EMPLOYEE_tp.MIDDLE_INITIAL_t DEFAULT NULL,
      JOB_ID_nv IN EMPLOYEE_tp.JOB_ID_t DEFAULT NULL,
      MANAGER_ID_nv IN EMPLOYEE_tp.MANAGER_ID_t DEFAULT NULL,
      HIRE_DATE_nv IN EMPLOYEE_tp.HIRE_DATE_t DEFAULT NULL,
      SALARY_nv IN EMPLOYEE_tp.SALARY_t DEFAULT NULL,
      COMMISSION_nv IN EMPLOYEE_tp.COMMISSION_t DEFAULT NULL,
      DEPARTMENT_ID_nv IN EMPLOYEE_tp.DEPARTMENT_ID_t DEFAULT NULL,
      EMPNO_nv IN EMPLOYEE_tp.EMPNO_t DEFAULT NULL,
      ENAME_nv IN EMPLOYEE_tp.ENAME_t DEFAULT NULL,
      CREATED_BY_nv IN EMPLOYEE_tp.CREATED_BY_t DEFAULT NULL,
      CREATED_ON_nv IN EMPLOYEE_tp.CREATED_ON_t DEFAULT NULL,
      CHANGED_BY_nv IN EMPLOYEE_tp.CHANGED_BY_t DEFAULT NULL,
      CHANGED_ON_nv IN EMPLOYEE_tp.CHANGED_ON_t DEFAULT NULL,
      -- Generated primary key value
      EMPLOYEE_ID_out IN OUT EMPLOYEE_tp.EMPLOYEE_ID_t,
      prefix_in IN VARCHAR2 DEFAULT NULL,
      suffix_in IN VARCHAR2 DEFAULT NULL
      );

END EMPLOYEE_up;
/
