CREATE OR REPLACE PACKAGE parse_sort
/*
Version of parse package that return strings in sorted order.
*/
IS
   SUBTYPE maxvarchar2_t IS VARCHAR2 (32767);

   TYPE item_tt IS TABLE OF BOOLEAN
      INDEX BY maxvarchar2_t;

   FUNCTION string_to_list (string_in IN VARCHAR2, delim_in IN VARCHAR2
            := ',')
      RETURN item_tt;

   PROCEDURE show (string_in IN VARCHAR2, delim_in IN VARCHAR2 := ',');

   PROCEDURE show_variations;
END parse_sort;
/

CREATE OR REPLACE PACKAGE BODY parse_sort
IS
   FUNCTION string_to_list (string_in IN VARCHAR2, delim_in IN VARCHAR2
            := ',')
      RETURN item_tt
   IS
      l_item       maxvarchar2_t;
      l_loc        PLS_INTEGER;
      l_startloc   PLS_INTEGER   := 1;
      items_out    item_tt;

      PROCEDURE add_item (item_in IN VARCHAR2)
      IS
      BEGIN
         IF item_in = delim_in
         THEN
            /* We don't put delimiters into the collection. */
            NULL;
         ELSIF items_out.EXISTS (item_in)
         THEN
            RAISE DUP_VAL_ON_INDEX;
         ELSE
            items_out (item_in) := TRUE;
         END IF;
      END add_item;
   BEGIN
      IF string_in IS NOT NULL AND delim_in IS NOT NULL
      THEN
         LOOP
            -- Find next delimiter
            l_loc := INSTR (string_in, delim_in, l_startloc);

            IF l_loc = l_startloc                    -- Previous item is NULL
            THEN
               l_item := NULL;
            ELSIF l_loc = 0                     -- Rest of string is last item
            THEN
               l_item := SUBSTR (string_in, l_startloc);
            ELSE
               l_item := SUBSTR (string_in, l_startloc, l_loc - l_startloc);
            END IF;

            add_item (l_item);

            IF l_loc = 0
            THEN
               EXIT;
            ELSE
               l_startloc := l_loc + 1;
            END IF;
         END LOOP;
      END IF;

      RETURN items_out;
   END string_to_list;

   PROCEDURE show (string_in IN VARCHAR2, delim_in IN VARCHAR2 := ',')
   IS
      items     item_tt;
      l_index   maxvarchar2_t;
   BEGIN
      DBMS_OUTPUT.put_line (   'Parse "'
                            || string_in
                            || '" using "'
                            || delim_in
                            || '"'
                           );
      items := string_to_list (string_in, delim_in);
      l_index := items.FIRST;

      WHILE (l_index IS NOT NULL)
      LOOP
         DBMS_OUTPUT.put_line (l_index);
         l_index := items.NEXT (l_index);
      END LOOP;
   END show;

   PROCEDURE show_variations
   IS
   BEGIN
      show ('a,b,c');
      show ('c,b,a');
      show ('AAA,a,X,Q');
   END;
END parse_sort;
/