CREATE OR REPLACE PACKAGE TYPE_TABLE_TP
/*
| Generated by or retrieved from Qnxo - DO NOT MODIFY!
| Qnxo - "Get it right, do it fast" - www.qnxo.com
| Qnxo Universal ID: {0B4B1015-32D7-4E94-94B2-245FBBD63544}
| Created On: June      29, 2005 00:28:03 Created By: QNXO_DEMO
*/
/*
   The types package creates a set of SUBTYPES that you can use
   in place of %ROWTYPE and %TYPE declarations. It also defines
   a number of collection and REF CURSOR types. By using the
   types package, you can avoid the need to grant SELECT privileges
   on tables simply to perform anchored declarations. You will also
   have a standard set of advanced types to use (and re-use)
   throughout your application.
*/
IS
   -- Two alternatives for ROWTYPE declarations:
   SUBTYPE TYPE_TABLE_rt IS TYPE_TABLE%ROWTYPE;
   SUBTYPE rowtype IS TYPE_TABLE%ROWTYPE;

   SUBTYPE ID_t IS TYPE_TABLE.ID%TYPE;
   SUBTYPE CATEGORY_t IS TYPE_TABLE.CATEGORY%TYPE;
   SUBTYPE NAME_t IS TYPE_TABLE.NAME%TYPE;
   SUBTYPE DESCRIPTION_t IS TYPE_TABLE.DESCRIPTION%TYPE;
   SUBTYPE IS_DEFAULT_t IS TYPE_TABLE.IS_DEFAULT%TYPE;
   SUBTYPE CREATED_ON_t IS TYPE_TABLE.CREATED_ON%TYPE;
   SUBTYPE CREATED_BY_t IS TYPE_TABLE.CREATED_BY%TYPE;
   SUBTYPE CHANGED_ON_t IS TYPE_TABLE.CHANGED_ON%TYPE;
   SUBTYPE CHANGED_BY_t IS TYPE_TABLE.CHANGED_BY%TYPE;

    -- Ref cursors returning a row from TYPE_TABLE
    -- and a weak REF CURSOR type to use with dynamic SQL.
   TYPE TYPE_TABLE_rc IS REF CURSOR RETURN TYPE_TABLE%ROWTYPE;
   TYPE table_refcur IS REF CURSOR RETURN TYPE_TABLE%ROWTYPE;
   TYPE weak_refcur IS REF CURSOR;

   -- Collection of %ROWTYPE records based on "TYPE_TABLE"
   TYPE TYPE_TABLE_tc IS TABLE OF TYPE_TABLE%ROWTYPE INDEX BY BINARY_INTEGER;
   TYPE type_table_ntt IS TABLE OF TYPE_TABLE%ROWTYPE;
   TYPE type_table_vat IS VARRAY(100) OF TYPE_TABLE%ROWTYPE;

   -- Same type structure, with a static name.
   TYPE aat IS TABLE OF TYPE_TABLE%ROWTYPE INDEX BY BINARY_INTEGER;
   TYPE ntt IS TABLE OF TYPE_TABLE%ROWTYPE;
   TYPE vat IS VARRAY(100) OF TYPE_TABLE%ROWTYPE;
   --
   -- Column Collection based on column "ID"
   TYPE ID_cc IS TABLE OF TYPE_TABLE.ID%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CATEGORY"
   TYPE CATEGORY_cc IS TABLE OF TYPE_TABLE.CATEGORY%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "NAME"
   TYPE NAME_cc IS TABLE OF TYPE_TABLE.NAME%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "DESCRIPTION"
   TYPE DESCRIPTION_cc IS TABLE OF TYPE_TABLE.DESCRIPTION%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "IS_DEFAULT"
   TYPE IS_DEFAULT_cc IS TABLE OF TYPE_TABLE.IS_DEFAULT%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATED_ON"
   TYPE CREATED_ON_cc IS TABLE OF TYPE_TABLE.CREATED_ON%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CREATED_BY"
   TYPE CREATED_BY_cc IS TABLE OF TYPE_TABLE.CREATED_BY%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CHANGED_ON"
   TYPE CHANGED_ON_cc IS TABLE OF TYPE_TABLE.CHANGED_ON%TYPE INDEX BY BINARY_INTEGER;
   -- Column Collection based on column "CHANGED_BY"
   TYPE CHANGED_BY_cc IS TABLE OF TYPE_TABLE.CHANGED_BY%TYPE INDEX BY BINARY_INTEGER;
END TYPE_TABLE_TP;
/
